<?php

namespace srag\Plugins\SrGeogebra\Config;

use ilCheckboxInputGUI;
use ilNumberInputGUI;
use ilSelectInputGUI;
use ilSrGeogebraConfigGUI;
use srag\Plugins\SrGeogebra\Forms\BaseAdvancedGeogebraFormGUI;
use srag\Plugins\SrGeogebra\Forms\GeogebraFormGUI;

/**
 * Class ConfigFormGUI
 *
 * Generated by SrPluginGenerator v1.3.4
 *
 * @package srag\Plugins\SrGeogebra\Config
 *
 * @author studer + raimann ag - Team Custom 1 <support-custom1@studer-raimann.ch>
 */
class ConfigAdvancedGeogebraFormGUI extends BaseAdvancedGeogebraFormGUI
{
    const KEY_DEFAULT_WIDTH = "default_width";
    const KEY_DEFAULT_HEIGHT = "default_height";
    const KEY_DEFAULT_DRAG_ZOOM = "default_enableShiftDragZoom";
    const KEY_DEFAULT_RESET = "default_showResetIcon";
    const KEY_DEFAULT_ALIGNMENT = "default_alignment";

    protected function initFields()
    {
        parent::initFields();

        // Add at the beginning of fields array
        $this->fields = [self::KEY_DEFAULT_ALIGNMENT => [
                self::PROPERTY_CLASS => ilSelectInputGUI::class,
                self::PROPERTY_OPTIONS => [
                    GeogebraFormGUI::ALIGNMENT_LEFT => GeogebraFormGUI::ALIGNMENT_LEFT,
                    GeogebraFormGUI::ALIGNMENT_CENTER => GeogebraFormGUI::ALIGNMENT_CENTER,
                    GeogebraFormGUI::ALIGNMENT_RIGHT => GeogebraFormGUI::ALIGNMENT_RIGHT
                ]
            ]
        ] + $this->fields;

        $this->fields = [self::KEY_DEFAULT_RESET => [
                self::PROPERTY_CLASS    => ilCheckboxInputGUI::class
            ]
        ] + $this->fields;

        $this->fields = [self::KEY_DEFAULT_DRAG_ZOOM => [
                self::PROPERTY_CLASS    => ilCheckboxInputGUI::class
            ]
        ] + $this->fields;

        $this->fields = [self::KEY_DEFAULT_HEIGHT => [
                self::PROPERTY_CLASS    => ilNumberInputGUI::class
            ]
        ] + $this->fields;

        $this->fields = [self::KEY_DEFAULT_WIDTH => [
                self::PROPERTY_CLASS    => ilNumberInputGUI::class
            ]
        ] + $this->fields;
    }


    /**
     * @inheritDoc
     */
    protected function getValue(/*string*/ $key)
    {
        switch ($key) {
            default:
                return self::srGeogebra()->config()->getValue($key);
        }
    }


    /**
     * @inheritDoc
     */
    protected function storeValue(/*string*/ $key, $value)/*: void*/
    {
        switch ($key) {
            default:
                self::srGeogebra()->config()->setValue($key, $value);
                break;
        }
    }


    /**
     * @inheritDoc
     */
    protected function initTitle()/*: void*/
    {
        $this->setTitle($this->txt("configuration"));
    }


    /**
     * @inheritDoc
     */
    protected function initCommands()/*: void*/
    {
        $this->addCommandButton(ilSrGeogebraConfigGUI::CMD_UPDATE_CONFIGURE, $this->txt("save"));
    }
}
